{"mappings":"AACA,MAAMA,EAASC,SAASC,eAAe,WACjCC,EAAIH,EAAOI,WAAW,MAC5BJ,EAAOK,MAAQC,OAAOC,WACtBP,EAAOQ,OAASF,OAAOG,YAEvB,MAAMC,EAAS,CAAC,OAAQ,UAAW,UAAW,UAAW,WACnDC,EAAQ,CACZC,EAAGZ,EAAOK,MAAQ,EAClBQ,EAAGb,EAAOQ,OAAS,GAEfM,EAAe,CAACC,EAAKC,IAClBC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAgBtD,SAASK,EAAKR,EAAGC,EAAGQ,EAAQC,GAC1BC,KAAKX,EAAIA,EACTW,KAAKV,EAAIA,EACTU,KAAKF,OAASA,EACdE,KAAKD,MAAQA,EACbC,KAAKC,OAASP,KAAKE,SAAWF,KAAKQ,GAAK,EACxCF,KAAKG,SAAW,IAChBH,KAAKI,mBAAqBb,EAAa,GAAI,KAC3CS,KAAKK,UAAY,C,EAAEhB,E,EAAGC,GAEtBU,KAAKM,OAAS,WAEZ,MAAMC,EAAY,CAAElB,EAAGW,KAAKX,EAAGC,EAAGU,KAAKV,GACvCU,KAAKC,QAAUD,KAAKG,SAGpBH,KAAKK,UAAUhB,GAAoC,KAA9BD,EAAMC,EAAIW,KAAKK,UAAUhB,GAC9CW,KAAKK,UAAUf,GAAoC,KAA9BF,EAAME,EAAIU,KAAKK,UAAUf,GAG9CU,KAAKX,EAAIW,KAAKK,UAAUhB,EAAIK,KAAKc,IAAIR,KAAKC,QAAUD,KAAKI,mBACzDJ,KAAKV,EAAIU,KAAKK,UAAUf,EAAII,KAAKe,IAAIT,KAAKC,QAAUD,KAAKI,mBACzDJ,KAAKU,KAAKH,IAEZP,KAAKU,KAAQH,IACX3B,EAAE+B,YACF/B,EAAEgC,OAAOL,EAAUlB,EAAGkB,EAAUjB,GAChCV,EAAEiC,OAAOb,KAAKX,EAAGW,KAAKV,GACtBV,EAAEkC,YAAcd,KAAKD,MACrBnB,EAAEmC,UAAYf,KAAKF,OACnBlB,EAAEoC,SACFpC,EAAEqC,aAzCNlC,OAAOmC,iBAAiB,UAAU,SAAUC,GAC1C1C,EAAOK,MAAQkB,KAAKhB,WACpBP,EAAOQ,OAASe,KAAKd,YACrBkC,OAEFrC,OAAOmC,iBAAiB,aAAa,SAAUC,GAC7C/B,EAAMC,EAAI8B,EAAE9B,EACZD,EAAME,EAAI6B,EAAE7B,KAuCd,IAAI+B,EAAQ,GACZ,SAASD,IACPC,EAAQ,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMP,EAAYxB,EAAa,EAAG,GAE5BQ,GAxDcwB,EAwDSpC,GAvDjBO,KAAKC,MAAMD,KAAKE,SAAW2B,EAAOC,SAyD9CH,EAAMI,KAAK,IAAI5B,EAAKpB,EAAOK,MAAQ,EAAGL,EAAOQ,OAAS,EAAG8B,EAAWhB,IA1DjD,IAACwB,EA6DxBH,IAEA,SAASM,IACPC,sBAAsBD,GAEtB9C,EAAEgD,UAAY,yBACdhD,EAAEiD,SAAS,EAAG,EAAGpD,EAAOK,MAAOL,EAAOQ,QACtCoC,EAAMS,SAASC,IACbA,EAAKzB,YAGToB","sources":["src/script.js"],"sourcesContent":["\"use strict\";\r\nconst canvas = document.getElementById(\"canvas1\");\r\nconst c = canvas.getContext(\"2d\");\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\n\r\nconst colors = [\"cyan\", \"#06283D\", \"#1363DF\", \"#47B5FF\", \"#DFF6FF\"];\r\nconst mouse = {\r\n  x: canvas.width / 2,\r\n  y: canvas.height / 2,\r\n};\r\nconst genRandomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\nconst genRandomColor = (colors) => {\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n// Event Listeners\r\nwindow.addEventListener(\"resize\", function (e) {\r\n  canvas.width = this.innerWidth;\r\n  canvas.height = this.innerHeight;\r\n  init();\r\n});\r\nwindow.addEventListener(\"mousemove\", function (e) {\r\n  mouse.x = e.x;\r\n  mouse.y = e.y;\r\n});\r\n\r\nfunction Ball(x, y, radius, color) {\r\n  this.x = x;\r\n  this.y = y;\r\n  this.radius = radius;\r\n  this.color = color;\r\n  this.radian = Math.random() * Math.PI * 2;\r\n  this.velocity = 0.05;\r\n  this.distanceFromCenter = genRandomInt(70, 150);\r\n  this.lastMouse = { x, y };\r\n\r\n  this.update = function () {\r\n    // Move points over time\r\n    const lastPoint = { x: this.x, y: this.y };\r\n    this.radian += this.velocity;\r\n    // Drag Effect\r\n\r\n    this.lastMouse.x += (mouse.x - this.lastMouse.x) * 0.05;\r\n    this.lastMouse.y += (mouse.y - this.lastMouse.y) * 0.05;\r\n\r\n    // Circular Motion\r\n    this.x = this.lastMouse.x + Math.cos(this.radian) * this.distanceFromCenter;\r\n    this.y = this.lastMouse.y + Math.sin(this.radian) * this.distanceFromCenter;\r\n    this.draw(lastPoint);\r\n  };\r\n  this.draw = (lastPoint) => {\r\n    c.beginPath();\r\n    c.moveTo(lastPoint.x, lastPoint.y);\r\n    c.lineTo(this.x, this.y);\r\n    c.strokeStyle = this.color;\r\n    c.lineWidth = this.radius;\r\n    c.stroke();\r\n    c.closePath();\r\n  };\r\n}\r\n\r\n// Implementations\r\nlet balls = [];\r\nfunction init() {\r\n  balls = [];\r\n  for (let i = 0; i < 50; i++) {\r\n    const lineWidth = genRandomInt(1, 5);\r\n\r\n    const color = genRandomColor(colors);\r\n\r\n    balls.push(new Ball(canvas.width / 2, canvas.height / 2, lineWidth, color));\r\n  }\r\n}\r\ninit();\r\n// Animation Loop\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  // c.clearRect(0, 0, canvas.width, canvas.height);\r\n  c.fillStyle = \"rgba(255,255,255,0.03)\";\r\n  c.fillRect(0, 0, canvas.width, canvas.height);\r\n  balls.forEach((ball) => {\r\n    ball.update();\r\n  });\r\n}\r\nanimate();\r\n"],"names":["$b63be9b0371e788c$var$canvas","document","getElementById","$b63be9b0371e788c$var$c","getContext","width","window","innerWidth","height","innerHeight","$b63be9b0371e788c$var$colors","$b63be9b0371e788c$var$mouse","x","y","$b63be9b0371e788c$var$genRandomInt","min","max","Math","floor","random","$b63be9b0371e788c$var$Ball","radius","color","this","radian","PI","velocity","distanceFromCenter","lastMouse","update","lastPoint","cos","sin","draw","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","addEventListener","e","$b63be9b0371e788c$var$init","$b63be9b0371e788c$var$balls","i","colors1","length","push","$b63be9b0371e788c$var$animate","requestAnimationFrame","fillStyle","fillRect","forEach","ball"],"version":3,"file":"index.3d867581.js.map"}